name: fastapi_test
services:
  fastapi_server:
    build:
      context: /home/cc/Transformer-QA/fastapi_server
      dockerfile: Dockerfile
    container_name: fastapi_server
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    ports:
      - "8000:8000"  # for HTTP requests
    volumes:
      - /mnt/object/meta-llama/Llama-3.1-8B-Instruct:/app/Llama-3.1-8B-Instruct  # TODO: Change this to the final model
    # environment:
    #   - MODEL_PATH=placeholder

  jupyter:
    image: quay.io/jupyter/minimal-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - /home/cc:/home/jovyan/work # mount workspace, update to workspace path when everything is ready
      - /mnt/object/meta-llama/Llama-3.1-8B-Instruct:/home/jovyan/Llama-3.1-8B-Instruct
    command: >
      bash -c "python3 -m pip install numpy && start-notebook.sh"

  flask:
    build:
      context: /home/cc/Transformer-QA
      # context: https://github.com/Jasonzzzz28/Transformer-QA.git#serving
    container_name: flask
    ports:
      - "80:5000"
    environment:
      - FASTAPI_SERVER_URL=http://fastapi_server:8000
      - MINIO_URL=http://minio:9000
      - MINIO_USER=your-access-key
      - MINIO_PASSWORD=your-secret-key
    # volumes:
    #   - /mnt/object/meta-llama/Llama-3.1-8B-Instruct:/app/Llama-3.1-8B-Instruct

  # TODO: Need testing
  prometheus:
  image: prom/prometheus:latest
  container_name: prometheus
  ports:
    - "9090:9090"
  volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    - /mnt/object/prometheus:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - /mnt/object/grafana:/var/lib/grafana

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=your-access-key
      - MINIO_ROOT_PASSWORD=your-secret-key
    volumes:
      - minio_data:/data
    command: server /data --console-address ':9001'

  minio-init:
    image: minio/mc
    container_name: minio_init
    depends_on:
      - minio
    restart: "no"
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      mc alias set myminio http://minio:9000 your-access-key your-secret-key &&
      mc mb -p myminio/production || echo 'Bucket already exists'
      "

  label-studio:
    image: heartexlabs/label-studio:1.16.0
    container_name: label-studio
    ports:
      - "8080:8080"
    volumes:
      - /home/cc/eval-loop-chi/scripts:/label-studio/scripts
    environment:
      - LABEL_STUDIO_URL=http://label-studio:8080
      - LABEL_STUDIO_USERNAME=labelstudio@example.com
      - LABEL_STUDIO_PASSWORD=labelstudio
      - LABEL_STUDIO_USER_TOKEN=ab9927067c51ff279d340d7321e4890dc2841c4a
      - POSTGRES_HOST=app-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=appdb